/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Fachada;
import java.util.HashMap;
import java.util.Map;


/**
 *
 * @author Anderson
 */
public class RAM extends javax.swing.JFrame {

    private String instruccion;
    private String direccion;
    
    Fachada fachada; 
    
    private Map<String,String> valoresPorDireccion;
    private Map<String,String> instruccionesPorDireccion;
    
    /**
     * Creates new form RAM
     */
    public RAM(Fachada fachada) {
        initComponents();
        ocultar(); 
        this.fachada = fachada;
        valoresPorDireccion = new HashMap<String,String>();
        instruccionesPorDireccion = new HashMap<String,String>();
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPMeroriaRam = new javax.swing.JPanel();
        jBCero = new javax.swing.JButton();
        jBUno = new javax.swing.JButton();
        jBDos = new javax.swing.JButton();
        jBTrece = new javax.swing.JButton();
        jBCatorce = new javax.swing.JButton();
        jBTres = new javax.swing.JButton();
        jBCuatro = new javax.swing.JButton();
        jBSeis = new javax.swing.JButton();
        jBCinco = new javax.swing.JButton();
        jBSiete = new javax.swing.JButton();
        jBOcho = new javax.swing.JButton();
        jBNueve = new javax.swing.JButton();
        jBDiez = new javax.swing.JButton();
        jBOnce = new javax.swing.JButton();
        jBDoce = new javax.swing.JButton();
        jBQuince = new javax.swing.JButton();
        jPCero = new javax.swing.JPanel();
        jlValorCero1 = new javax.swing.JLabel();
        jPUno = new javax.swing.JPanel();
        jlValorUno1 = new javax.swing.JLabel();
        jPDos = new javax.swing.JPanel();
        jlValorDos1 = new javax.swing.JLabel();
        jPTres = new javax.swing.JPanel();
        jlValorTres1 = new javax.swing.JLabel();
        jPCuatro = new javax.swing.JPanel();
        jlValorCuatro1 = new javax.swing.JLabel();
        jPCinco = new javax.swing.JPanel();
        jlValorCinco1 = new javax.swing.JLabel();
        jPSeis = new javax.swing.JPanel();
        jlValorSeis1 = new javax.swing.JLabel();
        jPSiete = new javax.swing.JPanel();
        jlValorSiete1 = new javax.swing.JLabel();
        jPOcho = new javax.swing.JPanel();
        jlValorOcho1 = new javax.swing.JLabel();
        jPNueve = new javax.swing.JPanel();
        jlValorNueve1 = new javax.swing.JLabel();
        jPDiez = new javax.swing.JPanel();
        jlValorDiez1 = new javax.swing.JLabel();
        jPOnce = new javax.swing.JPanel();
        jlValorOnce1 = new javax.swing.JLabel();
        jPDoce = new javax.swing.JPanel();
        jlValorDoce1 = new javax.swing.JLabel();
        jPTrece = new javax.swing.JPanel();
        jlValorTrece1 = new javax.swing.JLabel();
        jPCatorce = new javax.swing.JPanel();
        jlValorCatorce1 = new javax.swing.JLabel();
        jPQuince = new javax.swing.JPanel();
        jlValorQuince1 = new javax.swing.JLabel();
        jLDirreccion = new javax.swing.JLabel();
        jLContenido = new javax.swing.JLabel();
        jLTitulo = new javax.swing.JLabel();
        lbTextoDireccion = new javax.swing.JLabel();
        lbValorDireccion = new javax.swing.JLabel();
        lbTextoInstruccion = new javax.swing.JLabel();
        lbTextoDato = new javax.swing.JLabel();
        lbValorInstruccion = new javax.swing.JLabel();
        lbValorDato = new javax.swing.JLabel();
        jLTitulo2 = new javax.swing.JLabel();
        jBInstruccion = new javax.swing.JButton();
        jBDato = new javax.swing.JButton();
        jBProgramaDefecto = new javax.swing.JButton();
        jBBorrarPrograma = new javax.swing.JButton();
        jBCargarPrograma = new javax.swing.JButton();
        jBLDA = new javax.swing.JButton();
        jBAdd = new javax.swing.JButton();
        jBOut = new javax.swing.JButton();
        jBHLT = new javax.swing.JButton();
        jBSub = new javax.swing.JButton();
        jTDato = new javax.swing.JTextField();
        jlTextoDigito = new javax.swing.JLabel();
        jBIngresar = new javax.swing.JButton();
        jBNOP = new javax.swing.JButton();
        jBSTA = new javax.swing.JButton();
        jBJMP = new javax.swing.JButton();
        jBJC = new javax.swing.JButton();
        jBJZ = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPMeroriaRam.setBackground(new java.awt.Color(255, 255, 255));
        jPMeroriaRam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPMeroriaRamKeyPressed(evt);
            }
        });

        jBCero.setText("0");
        jBCero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCeroActionPerformed(evt);
            }
        });

        jBUno.setText("1");
        jBUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUnoActionPerformed(evt);
            }
        });

        jBDos.setText("2");
        jBDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDosActionPerformed(evt);
            }
        });

        jBTrece.setText("13");
        jBTrece.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTreceActionPerformed(evt);
            }
        });

        jBCatorce.setText("14");
        jBCatorce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCatorceActionPerformed(evt);
            }
        });

        jBTres.setText("3");
        jBTres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTresActionPerformed(evt);
            }
        });

        jBCuatro.setText("4");
        jBCuatro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCuatroActionPerformed(evt);
            }
        });

        jBSeis.setText("6");
        jBSeis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSeisActionPerformed(evt);
            }
        });

        jBCinco.setText("5");
        jBCinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCincoActionPerformed(evt);
            }
        });

        jBSiete.setText("7");
        jBSiete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSieteActionPerformed(evt);
            }
        });

        jBOcho.setText("8");
        jBOcho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOchoActionPerformed(evt);
            }
        });

        jBNueve.setText("9");
        jBNueve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNueveActionPerformed(evt);
            }
        });

        jBDiez.setText("10");
        jBDiez.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDiezActionPerformed(evt);
            }
        });

        jBOnce.setText("11");
        jBOnce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOnceActionPerformed(evt);
            }
        });

        jBDoce.setText("12");
        jBDoce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDoceActionPerformed(evt);
            }
        });

        jBQuince.setText("15");
        jBQuince.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBQuinceActionPerformed(evt);
            }
        });

        jPCero.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPCero.setPreferredSize(new java.awt.Dimension(144, 27));

        jlValorCero1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPCeroLayout = new javax.swing.GroupLayout(jPCero);
        jPCero.setLayout(jPCeroLayout);
        jPCeroLayout.setHorizontalGroup(
            jPCeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCeroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorCero1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPCeroLayout.setVerticalGroup(
            jPCeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCeroLayout.createSequentialGroup()
                .addComponent(jlValorCero1)
                .addContainerGap())
        );

        jPUno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorUno1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPUnoLayout = new javax.swing.GroupLayout(jPUno);
        jPUno.setLayout(jPUnoLayout);
        jPUnoLayout.setHorizontalGroup(
            jPUnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPUnoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorUno1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPUnoLayout.setVerticalGroup(
            jPUnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPUnoLayout.createSequentialGroup()
                .addComponent(jlValorUno1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPDos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorDos1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPDosLayout = new javax.swing.GroupLayout(jPDos);
        jPDos.setLayout(jPDosLayout);
        jPDosLayout.setHorizontalGroup(
            jPDosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorDos1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPDosLayout.setVerticalGroup(
            jPDosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDosLayout.createSequentialGroup()
                .addComponent(jlValorDos1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPTres.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorTres1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPTresLayout = new javax.swing.GroupLayout(jPTres);
        jPTres.setLayout(jPTresLayout);
        jPTresLayout.setHorizontalGroup(
            jPTresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorTres1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPTresLayout.setVerticalGroup(
            jPTresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTresLayout.createSequentialGroup()
                .addComponent(jlValorTres1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPCuatro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorCuatro1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPCuatroLayout = new javax.swing.GroupLayout(jPCuatro);
        jPCuatro.setLayout(jPCuatroLayout);
        jPCuatroLayout.setHorizontalGroup(
            jPCuatroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCuatroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorCuatro1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPCuatroLayout.setVerticalGroup(
            jPCuatroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCuatroLayout.createSequentialGroup()
                .addComponent(jlValorCuatro1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPCinco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorCinco1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPCincoLayout = new javax.swing.GroupLayout(jPCinco);
        jPCinco.setLayout(jPCincoLayout);
        jPCincoLayout.setHorizontalGroup(
            jPCincoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCincoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorCinco1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPCincoLayout.setVerticalGroup(
            jPCincoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCincoLayout.createSequentialGroup()
                .addComponent(jlValorCinco1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPSeis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorSeis1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPSeisLayout = new javax.swing.GroupLayout(jPSeis);
        jPSeis.setLayout(jPSeisLayout);
        jPSeisLayout.setHorizontalGroup(
            jPSeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSeisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorSeis1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPSeisLayout.setVerticalGroup(
            jPSeisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSeisLayout.createSequentialGroup()
                .addComponent(jlValorSeis1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPSiete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorSiete1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPSieteLayout = new javax.swing.GroupLayout(jPSiete);
        jPSiete.setLayout(jPSieteLayout);
        jPSieteLayout.setHorizontalGroup(
            jPSieteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSieteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorSiete1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPSieteLayout.setVerticalGroup(
            jPSieteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSieteLayout.createSequentialGroup()
                .addComponent(jlValorSiete1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPOcho.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorOcho1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPOchoLayout = new javax.swing.GroupLayout(jPOcho);
        jPOcho.setLayout(jPOchoLayout);
        jPOchoLayout.setHorizontalGroup(
            jPOchoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOchoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorOcho1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPOchoLayout.setVerticalGroup(
            jPOchoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOchoLayout.createSequentialGroup()
                .addComponent(jlValorOcho1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPNueve.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorNueve1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPNueveLayout = new javax.swing.GroupLayout(jPNueve);
        jPNueve.setLayout(jPNueveLayout);
        jPNueveLayout.setHorizontalGroup(
            jPNueveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPNueveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorNueve1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPNueveLayout.setVerticalGroup(
            jPNueveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPNueveLayout.createSequentialGroup()
                .addComponent(jlValorNueve1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPDiez.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorDiez1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPDiezLayout = new javax.swing.GroupLayout(jPDiez);
        jPDiez.setLayout(jPDiezLayout);
        jPDiezLayout.setHorizontalGroup(
            jPDiezLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDiezLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorDiez1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPDiezLayout.setVerticalGroup(
            jPDiezLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDiezLayout.createSequentialGroup()
                .addComponent(jlValorDiez1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPOnce.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorOnce1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPOnceLayout = new javax.swing.GroupLayout(jPOnce);
        jPOnce.setLayout(jPOnceLayout);
        jPOnceLayout.setHorizontalGroup(
            jPOnceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOnceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorOnce1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPOnceLayout.setVerticalGroup(
            jPOnceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOnceLayout.createSequentialGroup()
                .addComponent(jlValorOnce1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPDoce.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorDoce1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPDoceLayout = new javax.swing.GroupLayout(jPDoce);
        jPDoce.setLayout(jPDoceLayout);
        jPDoceLayout.setHorizontalGroup(
            jPDoceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDoceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorDoce1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPDoceLayout.setVerticalGroup(
            jPDoceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDoceLayout.createSequentialGroup()
                .addComponent(jlValorDoce1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPTrece.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorTrece1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPTreceLayout = new javax.swing.GroupLayout(jPTrece);
        jPTrece.setLayout(jPTreceLayout);
        jPTreceLayout.setHorizontalGroup(
            jPTreceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTreceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorTrece1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPTreceLayout.setVerticalGroup(
            jPTreceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTreceLayout.createSequentialGroup()
                .addComponent(jlValorTrece1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPCatorce.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorCatorce1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPCatorceLayout = new javax.swing.GroupLayout(jPCatorce);
        jPCatorce.setLayout(jPCatorceLayout);
        jPCatorceLayout.setHorizontalGroup(
            jPCatorceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCatorceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorCatorce1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPCatorceLayout.setVerticalGroup(
            jPCatorceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCatorceLayout.createSequentialGroup()
                .addComponent(jlValorCatorce1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPQuince.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlValorQuince1.setText("0   0   0   0   0   0   0    0");

        javax.swing.GroupLayout jPQuinceLayout = new javax.swing.GroupLayout(jPQuince);
        jPQuince.setLayout(jPQuinceLayout);
        jPQuinceLayout.setHorizontalGroup(
            jPQuinceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPQuinceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlValorQuince1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPQuinceLayout.setVerticalGroup(
            jPQuinceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPQuinceLayout.createSequentialGroup()
                .addComponent(jlValorQuince1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLDirreccion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLDirreccion.setText("Dirección");

        jLContenido.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLContenido.setText("Contenido");

        jLTitulo.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLTitulo.setText("MEMORIA RAM");

        lbTextoDireccion.setText("Dirección de memoria seleccionada: ");

        lbValorDireccion.setText("0");

        lbTextoInstruccion.setText("Instrucción: ");

        lbTextoDato.setText("Dato: ");

        lbValorInstruccion.setText("LDA 0");

        lbValorDato.setText("0");

        jLTitulo2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLTitulo2.setText("Modificar contenido");

        jBInstruccion.setText("Instrucción");
        jBInstruccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInstruccionActionPerformed(evt);
            }
        });

        jBDato.setText("LDI");
        jBDato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDatoActionPerformed(evt);
            }
        });

        jBProgramaDefecto.setText("Cargar Programa por Defecto");
        jBProgramaDefecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBProgramaDefectoActionPerformed(evt);
            }
        });

        jBBorrarPrograma.setText("Borrar Programa");
        jBBorrarPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarProgramaActionPerformed(evt);
            }
        });

        jBCargarPrograma.setText("Guardar");
        jBCargarPrograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCargarProgramaActionPerformed(evt);
            }
        });

        jBLDA.setText("LDA");
        jBLDA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLDAActionPerformed(evt);
            }
        });

        jBAdd.setText("ADD");
        jBAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAddActionPerformed(evt);
            }
        });

        jBOut.setText("OUT");
        jBOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOutActionPerformed(evt);
            }
        });

        jBHLT.setText("HLT");
        jBHLT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHLTActionPerformed(evt);
            }
        });

        jBSub.setText("SUB");
        jBSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSubActionPerformed(evt);
            }
        });

        jTDato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTDatoActionPerformed(evt);
            }
        });
        jTDato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTDatoKeyPressed(evt);
            }
        });

        jlTextoDigito.setText("Digita un numero entre 0 a 15");

        jBIngresar.setText("Ingresar");
        jBIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIngresarActionPerformed(evt);
            }
        });

        jBNOP.setText("NOP");
        jBNOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNOPActionPerformed(evt);
            }
        });

        jBSTA.setText("STA");
        jBSTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSTAActionPerformed(evt);
            }
        });

        jBJMP.setText("JMP");
        jBJMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBJMPActionPerformed(evt);
            }
        });

        jBJC.setText("JC");
        jBJC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBJCActionPerformed(evt);
            }
        });

        jBJZ.setText("JZ");
        jBJZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBJZActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPMeroriaRamLayout = new javax.swing.GroupLayout(jPMeroriaRam);
        jPMeroriaRam.setLayout(jPMeroriaRamLayout);
        jPMeroriaRamLayout.setHorizontalGroup(
            jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jLTitulo)
                .addGap(187, 187, 187))
            .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBDoce, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBOnce, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBDiez, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBTrece, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBCatorce, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBQuince, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBNueve, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBOcho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBSiete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBSeis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBCinco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBCuatro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBTres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBDos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBUno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBCero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPTres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPUno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPDos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPCuatro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPOnce, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPDoce, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPTrece, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPCatorce, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPCinco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPSeis, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPSiete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPOcho, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPNueve, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPDiez, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPCero, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPQuince, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jLTitulo2))
                            .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jBBorrarPrograma)
                                            .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jBProgramaDefecto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                                                    .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPMeroriaRamLayout.createSequentialGroup()
                                                            .addComponent(jBInstruccion)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jBDato, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(lbTextoDireccion, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPMeroriaRamLayout.createSequentialGroup()
                                                            .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(lbTextoInstruccion)
                                                                .addComponent(lbTextoDato))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(lbValorDato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(lbValorInstruccion, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))))
                                                    .addGap(20, 20, 20)
                                                    .addComponent(lbValorDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jBHLT))
                                            .addComponent(jBCargarPrograma)
                                            .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                                                .addComponent(jTDato, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jBIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jBCancelar))
                                            .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                                                .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPMeroriaRamLayout.createSequentialGroup()
                                                        .addComponent(jBLDA)
                                                        .addGap(12, 12, 12)
                                                        .addComponent(jBAdd))
                                                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                                                        .addComponent(jBSub)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(jBJZ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(jBNOP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(jBOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jBSTA)
                                                    .addComponent(jBJMP)
                                                    .addComponent(jBJC, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(41, 41, 41))
                                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                                        .addComponent(jlTextoDigito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addContainerGap())))))
                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                        .addComponent(jLDirreccion)
                        .addGap(47, 47, 47)
                        .addComponent(jLContenido))))
        );
        jPMeroriaRamLayout.setVerticalGroup(
            jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLTitulo)
                .addGap(18, 18, 18)
                .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDirreccion)
                    .addComponent(jLContenido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPCero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBCero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBUno)
                            .addComponent(jPUno, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTextoDireccion)
                            .addComponent(lbValorDireccion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTextoInstruccion)
                            .addComponent(lbValorInstruccion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTextoDato)
                            .addComponent(lbValorDato))
                        .addGap(10, 10, 10)))
                .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPDos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, Short.MAX_VALUE)
                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                        .addComponent(jBDos)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPTres, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jBTres))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPCuatro, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jBCuatro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPCinco, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jBCinco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPSeis, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jBSeis))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBSiete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPSiete, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBOcho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPOcho, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPNueve, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBNueve, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBDiez, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPDiez, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(6, 6, 6))
                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                        .addComponent(jLTitulo2)
                        .addGap(18, 18, 18)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBInstruccion)
                            .addComponent(jBDato))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBLDA)
                            .addComponent(jBAdd)
                            .addComponent(jBSTA))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBSub)
                            .addComponent(jBOut)
                            .addComponent(jBJMP))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBHLT)
                            .addComponent(jBNOP)
                            .addComponent(jBJC))
                        .addGap(6, 6, 6)
                        .addComponent(jBJZ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlTextoDigito)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTDato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBOnce)
                            .addComponent(jPOnce, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBDoce)
                            .addComponent(jPDoce, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBTrece)
                            .addComponent(jPTrece, javax.swing.GroupLayout.PREFERRED_SIZE, 24, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBCatorce)
                            .addComponent(jPCatorce, javax.swing.GroupLayout.PREFERRED_SIZE, 24, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPMeroriaRamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBQuince)
                            .addComponent(jPQuince, javax.swing.GroupLayout.PREFERRED_SIZE, 25, Short.MAX_VALUE))
                        .addGap(47, 47, 47))
                    .addGroup(jPMeroriaRamLayout.createSequentialGroup()
                        .addComponent(jBProgramaDefecto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBBorrarPrograma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBCargarPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPMeroriaRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPMeroriaRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ocultar(){
        lbTextoDireccion.setVisible(false);
        lbTextoInstruccion.setVisible(false);
        lbTextoDato.setVisible(false);
        lbValorDato.setVisible(false);
        lbValorDireccion.setVisible(false);
        lbValorInstruccion.setVisible(false);
        jLTitulo2.setVisible(false);
        jBInstruccion.setVisible(false);
        jBDato.setVisible(false);
        jBLDA.setVisible(false);
        jBHLT.setVisible(false);
        jBAdd.setVisible(false);
        jBOut.setVisible(false);
        jBSub.setVisible(false);
        jTDato.setVisible(false);
        jBJC.setVisible(false);
        jBJZ.setVisible(false);
        jBJMP.setVisible(false);
        jBSTA.setVisible(false);
        jBNOP.setVisible(false);
        jlTextoDigito.setVisible(false);
        jBIngresar.setVisible(false);
        jBCancelar.setVisible(false);
    }
    
    private void jBCeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCeroActionPerformed
        direccion ="0";
        visibleParte1(direccion, true);
        jBDato.setVisible(true);
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBCeroActionPerformed

    private void jBNueveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNueveActionPerformed
        direccion ="9";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBNueveActionPerformed

    private void jBInstruccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInstruccionActionPerformed
        jBLDA.setVisible(true);
        jBHLT.setVisible(true);
        jBAdd.setVisible(true);
        jBOut.setVisible(true);
        jBSub.setVisible(true);
        jBJC.setVisible(true);
        jBJZ.setVisible(true);
        jBJMP.setVisible(true);
        jBNOP.setVisible(true);
        jBSTA.setVisible(true);
        jBDato.setEnabled(false);
        lbTextoDato.setText("");
        desbloquear(direccion, false);
    }//GEN-LAST:event_jBInstruccionActionPerformed

    private void jBUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUnoActionPerformed
        direccion ="1";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBUnoActionPerformed

    private void jBDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDosActionPerformed
        direccion ="2";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBDosActionPerformed

    private void jBTresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTresActionPerformed
        direccion ="3";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBTresActionPerformed

    private void jBCuatroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCuatroActionPerformed
        direccion ="4";
        visibleParte1(direccion, true);    
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBCuatroActionPerformed

    private void jBCincoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCincoActionPerformed
        direccion ="5";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBCincoActionPerformed

    private void jBSeisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSeisActionPerformed
        direccion ="6";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBSeisActionPerformed

    private void jBSieteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSieteActionPerformed
        direccion ="7";
        visibleParte1(direccion, true);   
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBSieteActionPerformed

    private void jBOchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOchoActionPerformed
        direccion ="8";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBOchoActionPerformed

    private void jBDiezActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDiezActionPerformed
        direccion ="10";
        visibleParte1(direccion, true);  
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBDiezActionPerformed

    private void jBOnceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOnceActionPerformed
        direccion ="11";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBOnceActionPerformed

    private void jBDoceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDoceActionPerformed
        direccion ="12";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBDoceActionPerformed

    private void jBTreceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTreceActionPerformed
        direccion ="13";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBTreceActionPerformed

    private void jBCatorceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCatorceActionPerformed
        direccion ="14";
        visibleParte1(direccion, true);  
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion();
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBCatorceActionPerformed

    private void jBQuinceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBQuinceActionPerformed
        direccion ="15";
        visibleParte1(direccion, true); 
        valoresPorDireccion = fachada.getRAM().getValoresPorDireccion();
        instruccionesPorDireccion = fachada.getRAM().getInstruccionesPorDireccion(); 
        lbValorDato.setText(valoresPorDireccion.get(direccion));
        lbValorInstruccion.setText(instruccionesPorDireccion.get(direccion) + " " + valoresPorDireccion.get(direccion));
    }//GEN-LAST:event_jBQuinceActionPerformed

    private void jTDatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTDatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTDatoActionPerformed

    private void jBLDAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLDAActionPerformed
        jTDato.setVisible(true);    
        jlTextoDigito.setVisible(true);
        jBIngresar.setVisible(true);
        jBCancelar.setVisible(true);
        lbTextoDato.setText("");
        instruccion = "LDA";
    }//GEN-LAST:event_jBLDAActionPerformed

    private void jPMeroriaRamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPMeroriaRamKeyPressed
        
    }//GEN-LAST:event_jPMeroriaRamKeyPressed

    private void jTDatoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDatoKeyPressed
        
    }//GEN-LAST:event_jTDatoKeyPressed

    private void jBIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIngresarActionPerformed
        
        String numero = (jTDato.getText());
        lbValorInstruccion.setText(instruccion+" "+numero);
        int valorDato=0;
        valorDato = calcularDato(numero);
        
        lbValorDato.setText(numero);
        String binario = convertirDecimalABinarioManual(Long.parseLong(numero));
        visibleParteMod(false);
        desbloquear(direccion, true);
        String cerosIzq ="0";            
        while(binario.length() != 8){
            binario =cerosIzq+binario;
        }
        pintarBinario(direccion, binario);
        guardarValoresEnPosiciones(direccion, numero, instruccion);
        
        jBDato.setEnabled(true);
        jBInstruccion.setEnabled(true);
        
        jBCancelar.setVisible(false);
    }//GEN-LAST:event_jBIngresarActionPerformed

    private int calcularDato(String numero) throws NumberFormatException {
        int valorDato;
        switch (instruccion) {
            case "LDA":
                valorDato = Integer.parseInt(numero);
                break;
            case "ADD":
                valorDato= Integer.parseInt(numero)+16;
                break;
            default:
                valorDato= Integer.parseInt(numero)+32;
                break;
        }
        return valorDato;
    }

    private void jBOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOutActionPerformed
        
        instruccion = "OUT";
        lbValorInstruccion.setText(instruccion);
        String numero = ("-32");
        lbValorDato.setText(numero);
        visibleParteMod(false);
        desbloquear(direccion, true);
        String binario ="11100000";
        
        pintarBinario(direccion, binario);
        guardarValoresEnPosiciones(direccion, numero, instruccion);
    }//GEN-LAST:event_jBOutActionPerformed

    private void jBHLTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHLTActionPerformed
        instruccion = "HLT";
        lbValorInstruccion.setText(instruccion);
        String numero = ("-16");
        lbValorDato.setText(numero);
        visibleParteMod(false);
        desbloquear(direccion, true);
        String binario ="11110000";
        
        pintarBinario(direccion, binario);
        guardarValoresEnPosiciones(direccion, numero, instruccion);
    }//GEN-LAST:event_jBHLTActionPerformed

    private void jBAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAddActionPerformed
        jTDato.setVisible(true);    
        jlTextoDigito.setVisible(true);
        jBIngresar.setVisible(true);
        jBCancelar.setVisible(true);
        lbTextoDato.setText("");
        instruccion = "ADD";
        
    }//GEN-LAST:event_jBAddActionPerformed

    private void jBSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSubActionPerformed
        jTDato.setVisible(true);    
        jlTextoDigito.setVisible(true);
        jBIngresar.setVisible(true);
        jBCancelar.setVisible(true);
        instruccion = "SUB";
        lbTextoDato.setText("");
    }//GEN-LAST:event_jBSubActionPerformed

    private void jBDatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDatoActionPerformed
        jTDato.setVisible(true);    
        jlTextoDigito.setVisible(true);
        jBIngresar.setVisible(true);
        jBCancelar.setVisible(true);
        jBInstruccion.setEnabled(false);
        instruccion = "LDI";
        desbloquear(direccion, false);
        String numero = (jTDato.getText());
        lbValorInstruccion.setText(instruccion+" "+numero);
        guardarValoresEnPosiciones(direccion, numero, instruccion);
        lbTextoDato.setText("");
    }//GEN-LAST:event_jBDatoActionPerformed

    private void jBCargarProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCargarProgramaActionPerformed
        this.setVisible(false);
        Simulador simulador = new Simulador(this.fachada);
        simulador.setVisible(true);
    }//GEN-LAST:event_jBCargarProgramaActionPerformed

    private void jBNOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNOPActionPerformed
        instruccion = "NOP";
        lbValorInstruccion.setText(instruccion);
        String numero = ("0");
        lbValorDato.setText(numero);
        visibleParteMod(false);
        desbloquear(direccion, true);
        String binario ="00000000";
        
        pintarBinario(direccion, binario);
        guardarValoresEnPosiciones(direccion, numero, instruccion);
    }//GEN-LAST:event_jBNOPActionPerformed

    private void jBSTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSTAActionPerformed
        jTDato.setVisible(true);    
        jlTextoDigito.setVisible(true);
        jBIngresar.setVisible(true);
        jBCancelar.setVisible(true);
        instruccion = "STA";
        lbTextoDato.setText("");
    }//GEN-LAST:event_jBSTAActionPerformed

    private void jBJMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBJMPActionPerformed
        jTDato.setVisible(true);    
        jlTextoDigito.setVisible(true);
        jBIngresar.setVisible(true);
        jBCancelar.setVisible(true);
        instruccion = "JMP";
        lbTextoDato.setText("");
    }//GEN-LAST:event_jBJMPActionPerformed

    private void jBJCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBJCActionPerformed
        jTDato.setVisible(true);    
        jlTextoDigito.setVisible(true);
        jBIngresar.setVisible(true);
        jBCancelar.setVisible(true);
        instruccion = "JC";
        lbTextoDato.setText("");
    }//GEN-LAST:event_jBJCActionPerformed

    private void jBJZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBJZActionPerformed
        jTDato.setVisible(true);    
        jlTextoDigito.setVisible(true);
        jBIngresar.setVisible(true);
        jBCancelar.setVisible(true);
        instruccion = "JZ";
        lbTextoDato.setText("");
    }//GEN-LAST:event_jBJZActionPerformed

    private void jBProgramaDefectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBProgramaDefectoActionPerformed

        fachada.getRAM().programaPorDefecto();
        
        String valor0 = fachada.getRAM().getValoresPorDireccion().get("0");
        programaPorDefectoBinarioPintar(valor0,"0");
        
        String valor1 = fachada.getRAM().getValoresPorDireccion().get("1");
        programaPorDefectoBinarioPintar(valor1,"1");
        
        String valor2 = fachada.getRAM().getValoresPorDireccion().get("2");
        programaPorDefectoBinarioPintar(valor2,"2");
        
        String valor3 = fachada.getRAM().getValoresPorDireccion().get("3");
        programaPorDefectoBinarioPintar(valor3,"3");
        
        String valor4 = fachada.getRAM().getValoresPorDireccion().get("4");
        programaPorDefectoBinarioPintar(valor4,"4");
        
        String valor5 = fachada.getRAM().getValoresPorDireccion().get("5");
        programaPorDefectoBinarioPintar(valor5,"5");

        String valor9 = fachada.getRAM().getValoresPorDireccion().get("9");
        programaPorDefectoBinarioPintar(valor9,"9");
        
        String valor10 = fachada.getRAM().getValoresPorDireccion().get("10");
        programaPorDefectoBinarioPintar(valor10,"10");
        
        String valor11 = fachada.getRAM().getValoresPorDireccion().get("11");
        programaPorDefectoBinarioPintar(valor11,"11");
        
        String valor12 = fachada.getRAM().getValoresPorDireccion().get("12");
        programaPorDefectoBinarioPintar(valor12,"12");
        
        
    }//GEN-LAST:event_jBProgramaDefectoActionPerformed

    private void jBBorrarProgramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarProgramaActionPerformed
        fachada.getRAM().borrarPrograma();
        for(int i = 0;i<16;i++){
            pintarBinario(String.valueOf(i),fachada.getRAM().getValoresPorDireccion().get(String.valueOf(i)));
        }  
    }//GEN-LAST:event_jBBorrarProgramaActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
    
        desbloquear(direccion, true);
        visibleParteMod(false);
        jBCancelar.setVisible(false);
        lbTextoDato.setText("");
        
    }//GEN-LAST:event_jBCancelarActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RAM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new RAM(fachada).setVisible(true);
//            }
//        });
//    }
    
    public void inicializar(){
        String valor0 = fachada.getRAM().getValoresPorDireccion().get("0");
        programaPorDefectoBinarioPintar(valor0,"0");
        
        String valor1 = fachada.getRAM().getValoresPorDireccion().get("1");
        programaPorDefectoBinarioPintar(valor1,"1");
        
        String valor2 = fachada.getRAM().getValoresPorDireccion().get("2");
        programaPorDefectoBinarioPintar(valor2,"2");
        
        String valor3 = fachada.getRAM().getValoresPorDireccion().get("3");
        programaPorDefectoBinarioPintar(valor3,"3");
        
        String valor4 = fachada.getRAM().getValoresPorDireccion().get("4");
        programaPorDefectoBinarioPintar(valor4,"4");
        
        String valor5 = fachada.getRAM().getValoresPorDireccion().get("5");
        programaPorDefectoBinarioPintar(valor5,"5");

        String valor9 = fachada.getRAM().getValoresPorDireccion().get("9");
        programaPorDefectoBinarioPintar(valor9,"9");
        
        String valor10 = fachada.getRAM().getValoresPorDireccion().get("10");
        programaPorDefectoBinarioPintar(valor10,"10");
        
        String valor11 = fachada.getRAM().getValoresPorDireccion().get("11");
        programaPorDefectoBinarioPintar(valor11,"11");
        
        String valor12 = fachada.getRAM().getValoresPorDireccion().get("12");
        programaPorDefectoBinarioPintar(valor12,"12");
    }

    public void visibleParte1(String direccion, boolean visible){
        lbTextoDireccion.setVisible(visible);
        lbTextoInstruccion.setVisible(visible);
        lbTextoDato.setVisible(visible);
        lbValorDato.setVisible(visible);
        lbValorDireccion.setText(direccion);
        lbValorDireccion.setVisible(visible);
        lbValorInstruccion.setVisible(visible);
        jLTitulo2.setVisible(visible);
        jBInstruccion.setVisible(visible);
        jBDato.setVisible(visible);
        jBDato.setEnabled(true);
    }
    
    public void visibleParteMod( boolean visible){
        jBLDA.setVisible(visible);
        jBHLT.setVisible(visible);
        jBAdd.setVisible(visible);
        jBOut.setVisible(visible);
        jBSub.setVisible(visible);
        jBJC.setVisible(visible);
        jBJZ.setVisible(visible);
        jBJMP.setVisible(visible);
        jBNOP.setVisible(visible);
        jBSTA.setVisible(visible);
        jLTitulo2.setVisible(visible);
        jBInstruccion.setVisible(visible);
        jBDato.setVisible(visible);
        jlTextoDigito.setVisible(visible);
        jTDato.setVisible(visible);
        jBIngresar.setVisible(visible);
    }
    
    public void desbloquear(String direccion, Boolean bloqueo){
        jBCero.setEnabled(bloqueo);
        jBUno.setEnabled(bloqueo);
        jBDos.setEnabled(bloqueo);
        jBTres.setEnabled(bloqueo);
        jBCuatro.setEnabled(bloqueo);
        jBCinco.setEnabled(bloqueo);
        jBSeis.setEnabled(bloqueo);
        jBSiete.setEnabled(bloqueo);
        jBOcho.setEnabled(bloqueo);
        jBNueve.setEnabled(bloqueo);
        jBDiez.setEnabled(bloqueo);
        jBOnce.setEnabled(bloqueo);
        jBDoce.setEnabled(bloqueo);
        jBTrece.setEnabled(bloqueo);
        jBCatorce.setEnabled(bloqueo);
        jBQuince.setEnabled(bloqueo);
        jBBorrarPrograma.setEnabled(bloqueo);
        jBCargarPrograma.setEnabled(bloqueo);
        jBProgramaDefecto.setEnabled(bloqueo);
        
        switch(direccion){
            case "0":   jBCero.setEnabled(true);break;
            case "1":   jBUno.setEnabled(true);break;
            case "2":   jBDos.setEnabled(true);break;
            case "3":   jBTres.setEnabled(true);break;
            case "4":   jBCuatro.setEnabled(true);break;
            case "5":   jBCinco.setEnabled(true);break;
            case "6":   jBSeis.setEnabled(true);break;
            case "7":   jBSiete.setEnabled(true);break;
            case "8":   jBOcho.setEnabled(true);break;
            case "9":   jBNueve.setEnabled(true);break;
            case "10":  jBDiez.setEnabled(true);break;
            case "11":  jBOnce.setEnabled(true);break;
            case "12":  jBDoce.setEnabled(true);break;
            case "13":  jBTrece.setEnabled(true);break;
            case "14":  jBCatorce.setEnabled(true);break;
            case "15":  jBQuince.setEnabled(true);break;
            default: break;
        }
    }
    
    public String convertirDecimalABinarioManual(long decimal) {
	if (decimal <= 0) {
		return "0";
	}
	StringBuilder binario = new StringBuilder();
	while (decimal > 0) {
            
		short residuo = (short) (decimal % 2);
		decimal = decimal / 2;
		binario.insert(0, String.valueOf(residuo));
	}
	return binario.toString();
    }
    
    public void pintarBinario(String direccion, String binario){
    
        switch(direccion){
            case "0":   jlValorCero1.setText(binario);
                        break;
            case "1":   jlValorUno1.setText(binario);
                        break;
            case "2":   jlValorDos1.setText(binario);
                        break;
            case "3":   jlValorTres1.setText(binario);
                        break;
            case "4":   jlValorCuatro1.setText(binario);
                        break;
            case "5":   jlValorCinco1.setText(binario);
                        break;
            case "6":   jlValorSeis1.setText(binario);
                        break;
            case "7":   jlValorSiete1.setText(binario);
                        break;
            case "8":   jlValorOcho1.setText(binario);
                        break;
            case "9":   jlValorNueve1.setText(binario);
                        break;
            case "10":   jlValorDiez1.setText(binario);
                        break;
            case "11":   jlValorOnce1.setText(binario);
                        break;
            case "12":   jlValorDoce1.setText(binario);
                        break;
            case "13":   jlValorTrece1.setText(binario);
                        break;
            case "14":   jlValorCatorce1.setText(binario);
                        break;
            case "15":   jlValorQuince1.setText(binario);
                        break;
            default: break;
        }
    }
        
    public void guardarValoresEnPosiciones(String direccion, String valorDato, String valorInstruccion){
        valoresPorDireccion.put(direccion, valorDato);
        instruccionesPorDireccion.put(direccion, valorInstruccion);
        
        fachada.getRAM().setValoresPorDireccion(valoresPorDireccion);
        fachada.getRAM().setinstruccionesPorDireccion(instruccionesPorDireccion);
        
    }
    
    public void programaPorDefectoBinarioPintar(String numero,String direccion){
        String binario = convertirDecimalABinarioManual(Long.parseLong(numero));
        String cerosIzq ="0";            
        while(binario.length() != 8){
            binario =cerosIzq+binario;
        }
        pintarBinario(direccion, binario);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdd;
    private javax.swing.JButton jBBorrarPrograma;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBCargarPrograma;
    private javax.swing.JButton jBCatorce;
    private javax.swing.JButton jBCero;
    private javax.swing.JButton jBCinco;
    private javax.swing.JButton jBCuatro;
    private javax.swing.JButton jBDato;
    private javax.swing.JButton jBDiez;
    private javax.swing.JButton jBDoce;
    private javax.swing.JButton jBDos;
    private javax.swing.JButton jBHLT;
    private javax.swing.JButton jBIngresar;
    private javax.swing.JButton jBInstruccion;
    private javax.swing.JButton jBJC;
    private javax.swing.JButton jBJMP;
    private javax.swing.JButton jBJZ;
    private javax.swing.JButton jBLDA;
    private javax.swing.JButton jBNOP;
    private javax.swing.JButton jBNueve;
    private javax.swing.JButton jBOcho;
    private javax.swing.JButton jBOnce;
    private javax.swing.JButton jBOut;
    private javax.swing.JButton jBProgramaDefecto;
    private javax.swing.JButton jBQuince;
    private javax.swing.JButton jBSTA;
    private javax.swing.JButton jBSeis;
    private javax.swing.JButton jBSiete;
    private javax.swing.JButton jBSub;
    private javax.swing.JButton jBTrece;
    private javax.swing.JButton jBTres;
    private javax.swing.JButton jBUno;
    private javax.swing.JLabel jLContenido;
    private javax.swing.JLabel jLDirreccion;
    private javax.swing.JLabel jLTitulo;
    private javax.swing.JLabel jLTitulo2;
    private javax.swing.JPanel jPCatorce;
    private javax.swing.JPanel jPCero;
    private javax.swing.JPanel jPCinco;
    private javax.swing.JPanel jPCuatro;
    private javax.swing.JPanel jPDiez;
    private javax.swing.JPanel jPDoce;
    private javax.swing.JPanel jPDos;
    private javax.swing.JPanel jPMeroriaRam;
    private javax.swing.JPanel jPNueve;
    private javax.swing.JPanel jPOcho;
    private javax.swing.JPanel jPOnce;
    private javax.swing.JPanel jPQuince;
    private javax.swing.JPanel jPSeis;
    private javax.swing.JPanel jPSiete;
    private javax.swing.JPanel jPTrece;
    private javax.swing.JPanel jPTres;
    private javax.swing.JPanel jPUno;
    private javax.swing.JTextField jTDato;
    private javax.swing.JLabel jlTextoDigito;
    private javax.swing.JLabel jlValorCatorce1;
    private javax.swing.JLabel jlValorCero1;
    private javax.swing.JLabel jlValorCinco1;
    private javax.swing.JLabel jlValorCuatro1;
    private javax.swing.JLabel jlValorDiez1;
    private javax.swing.JLabel jlValorDoce1;
    private javax.swing.JLabel jlValorDos1;
    private javax.swing.JLabel jlValorNueve1;
    private javax.swing.JLabel jlValorOcho1;
    private javax.swing.JLabel jlValorOnce1;
    private javax.swing.JLabel jlValorQuince1;
    private javax.swing.JLabel jlValorSeis1;
    private javax.swing.JLabel jlValorSiete1;
    private javax.swing.JLabel jlValorTrece1;
    private javax.swing.JLabel jlValorTres1;
    private javax.swing.JLabel jlValorUno1;
    private javax.swing.JLabel lbTextoDato;
    private javax.swing.JLabel lbTextoDireccion;
    private javax.swing.JLabel lbTextoInstruccion;
    private javax.swing.JLabel lbValorDato;
    private javax.swing.JLabel lbValorDireccion;
    private javax.swing.JLabel lbValorInstruccion;
    // End of variables declaration//GEN-END:variables
}
