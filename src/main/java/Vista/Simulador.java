/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Fachada;
import Modelo.CiclosDeReloj;
import java.awt.Color;

/**
 *
 * @author Anderson
 */
public class Simulador extends javax.swing.JFrame {
    RAM ramVista;
    Fachada fachada;
    private CiclosDeReloj ciclosReloj;
    private Boolean arranco = false;
    private String cerosIzq ="0"; 
    /**
     * Creates new form Vista
     */
    public Simulador(Fachada fachada) {
        initComponents();
        this.fachada = fachada;
        ramVista = new RAM(this.fachada);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLNombrePC = new javax.swing.JLabel();
        jLNombreMAR = new javax.swing.JLabel();
        jLNombreRAM = new javax.swing.JLabel();
        jLNombreIR = new javax.swing.JLabel();
        jLNombreUC = new javax.swing.JLabel();
        jLNombreAC = new javax.swing.JLabel();
        jLNombreALU = new javax.swing.JLabel();
        jLNombreB = new javax.swing.JLabel();
        jLNombreOUT = new javax.swing.JLabel();
        jLNombreRTA = new javax.swing.JLabel();
        jSliderVelocidad = new javax.swing.JSlider();
        jLVelocidad = new javax.swing.JLabel();
        jBEjecutarPxP = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jPPC = new javax.swing.JPanel();
        jLValorContadorPrograma = new javax.swing.JLabel();
        jPMAR = new javax.swing.JPanel();
        jLValorMAR = new javax.swing.JLabel();
        jPRAM = new javax.swing.JPanel();
        jLValorRAM = new javax.swing.JLabel();
        jPUC = new javax.swing.JPanel();
        jLValorUC = new javax.swing.JLabel();
        jPALU = new javax.swing.JPanel();
        jLValorALU = new javax.swing.JLabel();
        jPRTA = new javax.swing.JPanel();
        jLRTA = new javax.swing.JLabel();
        jPIR = new javax.swing.JPanel();
        jLIR = new javax.swing.JLabel();
        jPAC = new javax.swing.JPanel();
        jLValorAC = new javax.swing.JLabel();
        jPB = new javax.swing.JPanel();
        jLValorB = new javax.swing.JLabel();
        jPOUT = new javax.swing.JPanel();
        jLValorOUT = new javax.swing.JLabel();
        jBHLT = new javax.swing.JButton();
        jBMI = new javax.swing.JButton();
        jBRI = new javax.swing.JButton();
        jBRO = new javax.swing.JButton();
        jBIO = new javax.swing.JButton();
        jBOI = new javax.swing.JButton();
        jBBI = new javax.swing.JButton();
        jBSU = new javax.swing.JButton();
        jBS0 = new javax.swing.JButton();
        jBCE = new javax.swing.JButton();
        jBJ = new javax.swing.JButton();
        jBCO = new javax.swing.JButton();
        jBII = new javax.swing.JButton();
        jBAI = new javax.swing.JButton();
        jBAO = new javax.swing.JButton();
        jBFI = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        jLCiclosReloj = new javax.swing.JLabel();
        jLNombreCiclos = new javax.swing.JLabel();
        jLValorJC = new javax.swing.JLabel();
        jLJC = new javax.swing.JLabel();
        jLValorJZ = new javax.swing.JLabel();
        jLJZ = new javax.swing.JLabel();
        jLValorSTA = new javax.swing.JLabel();
        jLSTA = new javax.swing.JLabel();
        jLMensajeError = new javax.swing.JLabel();
        jBResetear = new javax.swing.JButton();
        jBIniciar = new javax.swing.JButton();

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 183, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLNombrePC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombrePC.setText("PC");

        jLNombreMAR.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombreMAR.setText("MAR");

        jLNombreRAM.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombreRAM.setText("RAM");

        jLNombreIR.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombreIR.setText("IR ");

        jLNombreUC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombreUC.setText("UC");

        jLNombreAC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombreAC.setText("AC");

        jLNombreALU.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombreALU.setText("ALU");

        jLNombreB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombreB.setText("B");

        jLNombreOUT.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombreOUT.setText("OUT");

        jLNombreRTA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLNombreRTA.setText("RTA");

        jLVelocidad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLVelocidad.setText("VELOCIDAD");

        jBEjecutarPxP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBEjecutarPxP.setIcon(new javax.swing.ImageIcon("C:\\Users\\Anderson\\Desktop\\por pasos.jpg")); // NOI18N
        jBEjecutarPxP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEjecutarPxPActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel26.setText("COMPUTADOR MAS SENCILLO POSIBLE SAP 1");

        jPPC.setBackground(new java.awt.Color(255, 255, 255));
        jPPC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPPC.setPreferredSize(new java.awt.Dimension(185, 48));

        jLValorContadorPrograma.setBackground(new java.awt.Color(255, 255, 255));
        jLValorContadorPrograma.setText(" 0");
        jLValorContadorPrograma.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPPCLayout = new javax.swing.GroupLayout(jPPC);
        jPPC.setLayout(jPPCLayout);
        jPPCLayout.setHorizontalGroup(
            jPPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPCLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLValorContadorPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPPCLayout.setVerticalGroup(
            jPPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPCLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLValorContadorPrograma)
                .addGap(19, 19, 19))
        );

        jPMAR.setBackground(new java.awt.Color(255, 255, 255));
        jPMAR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPMAR.setPreferredSize(new java.awt.Dimension(185, 48));

        jLValorMAR.setBackground(new java.awt.Color(255, 255, 255));
        jLValorMAR.setText(" 0");
        jLValorMAR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPMARLayout = new javax.swing.GroupLayout(jPMAR);
        jPMAR.setLayout(jPMARLayout);
        jPMARLayout.setHorizontalGroup(
            jPMARLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMARLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLValorMAR, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPMARLayout.setVerticalGroup(
            jPMARLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMARLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLValorMAR)
                .addGap(19, 19, 19))
        );

        jPRAM.setBackground(new java.awt.Color(255, 255, 255));
        jPRAM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPRAM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPRAMMouseClicked(evt);
            }
        });

        jLValorRAM.setBackground(new java.awt.Color(255, 255, 255));
        jLValorRAM.setText(" 0");
        jLValorRAM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPRAMLayout = new javax.swing.GroupLayout(jPRAM);
        jPRAM.setLayout(jPRAMLayout);
        jPRAMLayout.setHorizontalGroup(
            jPRAMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPRAMLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLValorRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPRAMLayout.setVerticalGroup(
            jPRAMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPRAMLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLValorRAM)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPUC.setBackground(new java.awt.Color(255, 255, 255));
        jPUC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLValorUC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLValorUC.setText("----");

        javax.swing.GroupLayout jPUCLayout = new javax.swing.GroupLayout(jPUC);
        jPUC.setLayout(jPUCLayout);
        jPUCLayout.setHorizontalGroup(
            jPUCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPUCLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLValorUC, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPUCLayout.setVerticalGroup(
            jPUCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPUCLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLValorUC)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPALU.setBackground(new java.awt.Color(255, 255, 255));
        jPALU.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPALULayout = new javax.swing.GroupLayout(jPALU);
        jPALU.setLayout(jPALULayout);
        jPALULayout.setHorizontalGroup(
            jPALULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPALULayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLValorALU, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPALULayout.setVerticalGroup(
            jPALULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLValorALU, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        jPRTA.setBackground(new java.awt.Color(255, 255, 255));
        jPRTA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLRTA.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLRTA.setForeground(new java.awt.Color(0, 0, 255));
        jLRTA.setText("0");

        javax.swing.GroupLayout jPRTALayout = new javax.swing.GroupLayout(jPRTA);
        jPRTA.setLayout(jPRTALayout);
        jPRTALayout.setHorizontalGroup(
            jPRTALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPRTALayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLRTA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        jPRTALayout.setVerticalGroup(
            jPRTALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLRTA, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
        );

        jPIR.setBackground(new java.awt.Color(255, 255, 255));
        jPIR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPIR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPIRMouseClicked(evt);
            }
        });

        jLIR.setBackground(new java.awt.Color(255, 255, 255));
        jLIR.setText(" 0");
        jLIR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPIRLayout = new javax.swing.GroupLayout(jPIR);
        jPIR.setLayout(jPIRLayout);
        jPIRLayout.setHorizontalGroup(
            jPIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPIRLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLIR, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPIRLayout.setVerticalGroup(
            jPIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPIRLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLIR)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPAC.setBackground(new java.awt.Color(255, 255, 255));
        jPAC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPAC.setMaximumSize(new java.awt.Dimension(116, 51));
        jPAC.setPreferredSize(new java.awt.Dimension(116, 51));

        jLValorAC.setBackground(new java.awt.Color(255, 255, 255));
        jLValorAC.setText(" 0");
        jLValorAC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPACLayout = new javax.swing.GroupLayout(jPAC);
        jPAC.setLayout(jPACLayout);
        jPACLayout.setHorizontalGroup(
            jPACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPACLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLValorAC, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPACLayout.setVerticalGroup(
            jPACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPACLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLValorAC)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPB.setBackground(new java.awt.Color(255, 255, 255));
        jPB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLValorB.setBackground(new java.awt.Color(255, 255, 255));
        jLValorB.setText(" 0");
        jLValorB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPBLayout = new javax.swing.GroupLayout(jPB);
        jPB.setLayout(jPBLayout);
        jPBLayout.setHorizontalGroup(
            jPBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLValorB, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPBLayout.setVerticalGroup(
            jPBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLValorB)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPOUT.setBackground(new java.awt.Color(255, 255, 255));
        jPOUT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLValorOUT.setBackground(new java.awt.Color(255, 255, 255));
        jLValorOUT.setText(" 0");
        jLValorOUT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPOUTLayout = new javax.swing.GroupLayout(jPOUT);
        jPOUT.setLayout(jPOUTLayout);
        jPOUTLayout.setHorizontalGroup(
            jPOUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOUTLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLValorOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPOUTLayout.setVerticalGroup(
            jPOUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOUTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLValorOUT)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jBHLT.setText("HLT");
        jBHLT.setEnabled(false);

        jBMI.setText("MI");
        jBMI.setEnabled(false);

        jBRI.setText("RI");
        jBRI.setEnabled(false);

        jBRO.setText("RO");
        jBRO.setEnabled(false);

        jBIO.setText("IO");
        jBIO.setEnabled(false);

        jBOI.setText("OI");
        jBOI.setEnabled(false);

        jBBI.setText("BI");
        jBBI.setEnabled(false);

        jBSU.setText("SU");
        jBSU.setEnabled(false);

        jBS0.setText("S0");
        jBS0.setEnabled(false);

        jBCE.setText("CE");
        jBCE.setEnabled(false);

        jBJ.setText("J");
        jBJ.setEnabled(false);

        jBCO.setText("CO");
        jBCO.setEnabled(false);

        jBII.setText("II");
        jBII.setEnabled(false);

        jBAI.setText("AI");
        jBAI.setEnabled(false);

        jBAO.setText("AO");
        jBAO.setEnabled(false);

        jBFI.setText("FI");
        jBFI.setEnabled(false);

        jLabel50.setText("Palabras de control");

        jLCiclosReloj.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLNombreCiclos.setText("Ciclos de Reloj");

        jLValorJC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLValorJC.setPreferredSize(new java.awt.Dimension(116, 51));

        jLJC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLJC.setText("JC");

        jLValorJZ.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLValorJZ.setPreferredSize(new java.awt.Dimension(116, 51));

        jLJZ.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLJZ.setText("JZ");

        jLValorSTA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLValorSTA.setPreferredSize(new java.awt.Dimension(116, 51));

        jLSTA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLSTA.setText("STA");

        jLMensajeError.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLMensajeError.setForeground(new java.awt.Color(255, 0, 0));

        jBResetear.setBackground(new java.awt.Color(255, 255, 255));
        jBResetear.setIcon(new javax.swing.ImageIcon("C:\\Users\\Anderson\\Desktop\\Actions-system-reboot-icon.png")); // NOI18N
        jBResetear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBResetearActionPerformed(evt);
            }
        });

        jBIniciar.setBackground(new java.awt.Color(255, 255, 255));
        jBIniciar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Anderson\\Desktop\\play.jpg")); // NOI18N
        jBIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel26))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLMensajeError, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLCiclosReloj, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel50)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jBHLT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jBCO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jBMI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jBSU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addComponent(jLJZ))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLValorJZ, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(34, 34, 34)
                                                .addComponent(jLSTA)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLValorSTA, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jPRTA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jPOUT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jPB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jPALU, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jPAC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                            .addGap(21, 21, 21)
                                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLNombreALU)
                                                                .addComponent(jLNombreB)
                                                                .addComponent(jLNombreOUT)
                                                                .addComponent(jLNombreRTA)))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                            .addGap(29, 29, 29)
                                                            .addComponent(jLNombreAC))))
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jBBI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jBRI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGap(6, 6, 6)
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jBOI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jBRO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGap(6, 6, 6)
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jBIO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jBCE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                            .addComponent(jBJ, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jBFI)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jBS0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                            .addComponent(jBII)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jBAI)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jBAO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))))
                            .addComponent(jLNombreCiclos)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLNombreRAM)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jPRAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLNombreMAR)
                                        .addComponent(jLNombrePC))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jPPC, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(jPMAR, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLNombreIR)
                                        .addComponent(jLNombreUC))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPUC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPIR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jBResetear, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBEjecutarPxP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addGap(99, 99, 99)
                                        .addComponent(jLJC)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLValorJC, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(83, 83, 83)
                                .addComponent(jLVelocidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSliderVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel26)
                .addGap(25, 25, 25)
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jBHLT)
                                .addComponent(jBRI)
                                .addComponent(jBRO)
                                .addComponent(jBIO)
                                .addComponent(jBII)
                                .addComponent(jBAI)
                                .addComponent(jBAO))
                            .addComponent(jBMI, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jBSU)
                                .addComponent(jBBI)
                                .addComponent(jBOI)
                                .addComponent(jBCE)
                                .addComponent(jBCO)
                                .addComponent(jBJ))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jBFI)
                                .addComponent(jBS0))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLNombreCiclos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLCiclosReloj, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLNombreAC)
                                .addGap(45, 45, 45)
                                .addComponent(jLNombreALU))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPALU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLNombreB)
                            .addComponent(jPB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLNombreOUT)
                            .addComponent(jPOUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPRTA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLNombreRTA))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLValorSTA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLSTA)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLValorJC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLValorJZ, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLNombrePC)
                            .addComponent(jPPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPMAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLNombreMAR))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLNombreRAM)
                            .addComponent(jPRAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPIR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLNombreIR))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLNombreUC)
                                    .addComponent(jPUC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLJC))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLJZ)
                                .addGap(1, 1, 1)))))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSliderVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLVelocidad)
                    .addComponent(jBEjecutarPxP, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBResetear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLMensajeError, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPIRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPIRMouseClicked
        
        
        
    }//GEN-LAST:event_jPIRMouseClicked

    private void jPRAMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPRAMMouseClicked
        if(!arranco){
            ramVista.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_jPRAMMouseClicked

    private void jBEjecutarPxPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEjecutarPxPActionPerformed
        
        
        
        if(!fachada.ramTieneDatosEnAlgunaDireccion()){
            jLMensajeError.setText("NO HAY DATOS EN LA RAM");
        }else{
            jPRAM.setEnabled(false);
            jLValorRAM.setEnabled(false);
            arranco = true;
            if (fachada.getSimulador().isEjecutar()) {
                fachada.getSimulador().setEjecutar(false);
                ciclosReloj.terminate();
                ciclosReloj = null;
            } else {
                    ciclosReloj = new CiclosDeReloj(this.jSliderVelocidad.getMaximum() - this.jSliderVelocidad.getValue() + 50);
                    ciclosReloj.start();
                    fachada.getSimulador().procesos();
                    
                    pintarPanelesBlanco();
                    pintarPanelDelPasoActual(Color.YELLOW, true, fachada.getSimulador().getLineaControlEjecutando());
                    if (fachada.getSimulador().getContadorPrograma()!= null){
                        while(fachada.getSimulador().getContadorPrograma().length() != 4){
                            fachada.getSimulador().setContadorPrograma(cerosIzq+fachada.getSimulador().getContadorPrograma());
                        }
                        jLValorContadorPrograma.setText(fachada.getSimulador().getContadorPrograma());
                    }
                    if(fachada.getSimulador().getInstruccionActual()!= null) {
                        jLValorUC.setText(fachada.getSimulador().getInstruccionActual());
                    }
                    if(fachada.getSimulador().getValorActualEnBinarioRAM()!= null) {
                        while(fachada.getSimulador().getValorActualEnBinarioRAM().length() != 8){
                            fachada.getSimulador().setValorActualEnBinarioRAM(cerosIzq+fachada.getSimulador().getValorActualEnBinarioRAM());
                        }
                        jLValorRAM.setText(fachada.getSimulador().getValorActualEnBinarioRAM());
                    }
                    if(fachada.getSimulador().getValorActualEnBinarioIR()!= null) {
                        while(fachada.getSimulador().getValorActualEnBinarioIR().length() != 8){
                            fachada.getSimulador().setValorActualEnBinarioIR(cerosIzq+fachada.getSimulador().getValorActualEnBinarioIR());
                        }
                        jLIR.setText(fachada.getSimulador().getValorActualEnBinarioIR());
                    }
                    if(fachada.getSimulador().getValorActualEnBinarioMAR()!= null) {
                        while(fachada.getSimulador().getValorActualEnBinarioMAR().length() ==8){
                            fachada.getSimulador().setValorActualEnBinarioMAR(cerosIzq+fachada.getSimulador().getValorActualEnBinarioMAR());
                        }
                        jLValorMAR.setText(fachada.getSimulador().getValorActualEnBinarioMAR());
                    }                    
                    if(fachada.getSimulador().getValorActualEnBinarioAC()!= null) {        
                        jLValorAC.setText(fachada.getSimulador().getValorActualEnBinarioAC());
                    }
                    if(fachada.getSimulador().getValorActualEnBinarioALU()!= null) {
                        while(fachada.getSimulador().getValorActualEnBinarioALU().length() ==8){
                            fachada.getSimulador().setValorActualEnBinarioALU(cerosIzq+fachada.getSimulador().getValorActualEnBinarioALU());
                        }
                        jLValorALU.setText(fachada.getSimulador().getValorActualEnBinarioALU());
                    }
                    if(fachada.getSimulador().getValorActualEnBinarioB()!= null) {
                        while(fachada.getSimulador().getValorActualEnBinarioB().length() ==8){
                            fachada.getSimulador().setValorActualEnBinarioB(cerosIzq+fachada.getSimulador().getValorActualEnBinarioB());
                        }
                        jLValorB.setText(fachada.getSimulador().getValorActualEnBinarioB());
                    }
                    if(fachada.getSimulador().getValorActualEnBinarioSTA()!= null) {
                        jLValorSTA.setText(fachada.getSimulador().getValorActualEnBinarioSTA());
                    }
                    if(fachada.getSimulador().getValorActualAcarreoSuma()!= null && Long.parseLong(fachada.getSimulador().getValorActualAcarreoSuma())>0) {
                        jLValorJC.setText(fachada.getSimulador().getValorActualAcarreoSuma());
                        jLValorJC.setBackground(Color.green);
                        jLValorJC.setOpaque(true);
                    }
                    if(fachada.getSimulador().getValorActualAcarreoSuma()!= null && Long.parseLong(fachada.getSimulador().getValorActualAcarreoSuma())==0) {
                        jLValorJZ.setText(fachada.getSimulador().getValorActualAcarreoSuma());
                        jLValorJZ.setBackground(Color.green);
                        jLValorJZ.setOpaque(true);
                    }
                    if(fachada.getSimulador().getResultadoOUT()!= null) {
                        jLValorOUT.setText(fachada.getSimulador().getResultadoOUT());
                    }
                    if(fachada.getSimulador().getResultadoRTA()!= null) {
                        jLRTA.setText(fachada.getSimulador().getResultadoRTA());
                    }
                    
                    if(fachada.getSimulador().getBloquear() != null && !fachada.getSimulador().getBloquear()){
                        bloquearPanelesLabel();
                    }
                    
                    if (fachada.getSimulador().getResetearLineas()){
                        pintarLineasDeControl();                        
                    }
                    
                    pintarLineasControl();
            }
        }   
        
              
    }//GEN-LAST:event_jBEjecutarPxPActionPerformed

    private void jBResetearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBResetearActionPerformed
        jLValorContadorPrograma.setText("0");
        jLValorMAR.setText("0");
        jLValorAC.setText("0");
        jLValorALU.setText("0");
        jLValorRAM.setText("0");
        jLValorB.setText("0");
        jLIR.setText("0");
        jLValorOUT.setText("0");   
        jLRTA.setText("0");
        jLValorUC.setText("LDA");
        jLValorJC.setText("0");
        jLValorJZ.setText("0");
        jLValorSTA.setText("0");
        jLCiclosReloj.setText("0");
        pintarLineasDeControl();
        pintarPanelesBlanco();arranco= false;
        fachada.getSimulador().inicializar();
        bloquearPanelesLabel();
    }//GEN-LAST:event_jBResetearActionPerformed

    private void jBIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIniciarActionPerformed
        ciclosReloj = new CiclosDeReloj(this.jSliderVelocidad.getMaximum() - this.jSliderVelocidad.getValue() + 50);
        ciclosReloj.start();
        if(!fachada.ramTieneDatosEnAlgunaDireccion()){
            jLMensajeError.setText("NO HAY DATOS EN LA RAM");
        }else{
            for(int i= 0; i<100; i++ ){
            fachada.getSimulador().procesos();

            pintarPanelesBlanco();
            pintarPanelDelPasoActual(Color.YELLOW, true, fachada.getSimulador().getLineaControlEjecutando());
            if (fachada.getSimulador().getContadorPrograma()!= null){
                while(fachada.getSimulador().getContadorPrograma().length() != 4){
                    fachada.getSimulador().setContadorPrograma(cerosIzq+fachada.getSimulador().getContadorPrograma());
                }
                jLValorContadorPrograma.setText(fachada.getSimulador().getContadorPrograma());
            }
            if(fachada.getSimulador().getInstruccionActual()!= null) {
                jLValorUC.setText(fachada.getSimulador().getInstruccionActual());
            }
            if(fachada.getSimulador().getValorActualEnBinarioRAM()!= null) {
                while(fachada.getSimulador().getValorActualEnBinarioRAM().length() != 8){
                    fachada.getSimulador().setValorActualEnBinarioRAM(cerosIzq+fachada.getSimulador().getValorActualEnBinarioRAM());
                }
                jLValorRAM.setText(fachada.getSimulador().getValorActualEnBinarioRAM());
            }
            if(fachada.getSimulador().getValorActualEnBinarioIR()!= null) {
                while(fachada.getSimulador().getValorActualEnBinarioIR().length() != 8){
                    fachada.getSimulador().setValorActualEnBinarioIR(cerosIzq+fachada.getSimulador().getValorActualEnBinarioIR());
                }
                jLIR.setText(fachada.getSimulador().getValorActualEnBinarioIR());
            }
            if(fachada.getSimulador().getValorActualEnBinarioMAR()!= null) {
                while(fachada.getSimulador().getValorActualEnBinarioMAR().length() ==8){
                    fachada.getSimulador().setValorActualEnBinarioMAR(cerosIzq+fachada.getSimulador().getValorActualEnBinarioMAR());
                }
                jLValorMAR.setText(fachada.getSimulador().getValorActualEnBinarioMAR());
            }                    
            if(fachada.getSimulador().getValorActualEnBinarioAC()!= null) {        
                jLValorAC.setText(fachada.getSimulador().getValorActualEnBinarioAC());
            }
            if(fachada.getSimulador().getValorActualEnBinarioALU()!= null) {
                while(fachada.getSimulador().getValorActualEnBinarioALU().length() ==8){
                    fachada.getSimulador().setValorActualEnBinarioALU(cerosIzq+fachada.getSimulador().getValorActualEnBinarioALU());
                }
                jLValorALU.setText(fachada.getSimulador().getValorActualEnBinarioALU());
            }
            if(fachada.getSimulador().getValorActualEnBinarioB()!= null) {
                while(fachada.getSimulador().getValorActualEnBinarioB().length() ==8){
                    fachada.getSimulador().setValorActualEnBinarioB(cerosIzq+fachada.getSimulador().getValorActualEnBinarioB());
                }
                jLValorB.setText(fachada.getSimulador().getValorActualEnBinarioB());
            }
            if(fachada.getSimulador().getValorActualEnBinarioSTA()!= null) {
                jLValorSTA.setText(fachada.getSimulador().getValorActualEnBinarioSTA());
            }
            if(fachada.getSimulador().getValorActualAcarreoSuma()!= null && Long.parseLong(fachada.getSimulador().getValorActualAcarreoSuma())>0) {
                jLValorJC.setText(fachada.getSimulador().getValorActualAcarreoSuma());
                jLValorJC.setBackground(Color.green);
                jLValorJC.setOpaque(true);
            }
            if(fachada.getSimulador().getValorActualAcarreoSuma()!= null && Long.parseLong(fachada.getSimulador().getValorActualAcarreoSuma())==0) {
                jLValorJZ.setText(fachada.getSimulador().getValorActualAcarreoSuma());
                jLValorJZ.setBackground(Color.green);
                jLValorJZ.setOpaque(true);
            }
            if(fachada.getSimulador().getResultadoOUT()!= null) {
                jLValorOUT.setText(fachada.getSimulador().getResultadoOUT());
            }
            if(fachada.getSimulador().getResultadoRTA()!= null) {
                jLRTA.setText(fachada.getSimulador().getResultadoRTA());
            }

            if(fachada.getSimulador().getBloquear() != null && !fachada.getSimulador().getBloquear()){
                bloquearPanelesLabel();
            }

            if (fachada.getSimulador().getResetearLineas()){
                pintarLineasDeControl();                        
            }

            pintarLineasControl();
            try{
                Thread.sleep(100);
            }catch (InterruptedException exc){
                System.out.println("Hilo principal interrumpido.");
            }
           }
        }
        jBIniciar.setEnabled(false);
        
        
    }//GEN-LAST:event_jBIniciarActionPerformed

    
    public void pintarLineasDeControl(){
        jBHLT.setBackground(Color.gray); 
        jBMI.setBackground(Color.gray); 
        jBRI.setBackground(Color.gray); 
        jBRO.setBackground(Color.gray);
        jBIO.setBackground(Color.gray); 
        jBII.setBackground(Color.gray);
        jBAI.setBackground(Color.gray);
        jBAO.setBackground(Color.gray);
        jBS0.setBackground(Color.gray);
        jBSU.setBackground(Color.gray);
        jBBI.setBackground(Color.gray);
        jBOI.setBackground(Color.gray);
        jBCE.setBackground(Color.gray); 
        jBCO.setBackground(Color.gray);
        jBJ.setBackground(Color.gray);
        jBFI.setBackground(Color.gray); 
    }
        
    public void bloquearPanelesLabel(){
        jLValorContadorPrograma.setEnabled(fachada.getSimulador().getBloquear());
        jLValorMAR.setEnabled(fachada.getSimulador().getBloquear());
        jLValorRAM.setEnabled(fachada.getSimulador().getBloquear());
        jLIR.setEnabled(fachada.getSimulador().getBloquear());
        jLValorAC.setEnabled(fachada.getSimulador().getBloquear());
        jLValorAC.setEnabled(fachada.getSimulador().getBloquear());
        jLValorAC.setEnabled(fachada.getSimulador().getBloquear());
        jLValorAC.setEnabled(fachada.getSimulador().getBloquear());
        jPALU.setEnabled(fachada.getSimulador().getBloquear());
        jPPC.setEnabled(fachada.getSimulador().getBloquear());
        jPMAR.setEnabled(fachada.getSimulador().getBloquear());
        jPRAM.setEnabled(fachada.getSimulador().getBloquear());
        jPIR.setEnabled(fachada.getSimulador().getBloquear());
        jPB.setEnabled(fachada.getSimulador().getBloquear());
        jPOUT.setEnabled(fachada.getSimulador().getBloquear());
        jLValorOUT.setEnabled(fachada.getSimulador().getBloquear());
        jLValorB.setEnabled(fachada.getSimulador().getBloquear());
        jBEjecutarPxP.setEnabled(fachada.getSimulador().getBloquear());
    }
    
    public void pintarPanelDelPasoActual(Color color, Boolean pintar, String instruccion){
        switch(instruccion){
            case "ALU": jPALU.setBackground(color);
                        jPALU.setOpaque(pintar);
                        break;
                        
            case "PC":  jPPC.setBackground(color);
                        jPPC.setOpaque(pintar);
                        break;
            case "MAR": jPMAR.setBackground(color);
                        jPMAR.setOpaque(pintar);
                        break;
            case "RAM": jPRAM.setBackground(color);
                        jPRAM.setOpaque(pintar);
                        break;
            case "IR":  jPIR.setBackground(color);
                        jPIR.setOpaque(pintar);
                        break;
            case "B":   jPB.setBackground(color);
                        jPB.setOpaque(pintar);
                        break;
            case "OUT": jPOUT.setBackground(color);
                        jPOUT.setOpaque(pintar);
                        break;
            case "AC":  jPAC.setBackground(color);
                        jPAC.setOpaque(pintar);
                        break;
            case "RTA": jPRTA.setBackground(color);
                        jPRTA.setOpaque(pintar);
                        break;
            case "STA": jLValorSTA.setBackground(color);
                        jLValorSTA.setOpaque(pintar);
                        break;
                        
        }    
                
    }
 
    public void pintarPanelesBlanco(){
        jLValorJC.setBackground(Color.gray);
        jLValorJC.setOpaque(true);
        jLValorJZ.setBackground(Color.gray);
        jLValorJZ.setOpaque(true);
        pintarPanelDelPasoActual(Color.WHITE, true, "ALU");
        pintarPanelDelPasoActual(Color.WHITE, true, "PC");
        pintarPanelDelPasoActual(Color.WHITE, true, "MAR");
        pintarPanelDelPasoActual(Color.WHITE, true, "RAM");
        pintarPanelDelPasoActual(Color.WHITE, true, "IR");
        pintarPanelDelPasoActual(Color.WHITE, true, "B");
        pintarPanelDelPasoActual(Color.WHITE, true, "OUT");
        pintarPanelDelPasoActual(Color.WHITE, true, "AC");
        pintarPanelDelPasoActual(Color.WHITE, true, "RTA");
        pintarPanelDelPasoActual(Color.WHITE, true, "STA");
    }
    
    public void pintarLineasControl(){
        for(int i=0; i<16;i++){
            jLCiclosReloj.setText(String.valueOf(fachada.getSimulador().getStepCount()));
            if(fachada.getSimulador().getLineasControl().get(i)!= null){
                switch(i){
                    case 0: jBHLT.setBackground(Color.red); break;
                    case 1: jBMI.setBackground(Color.red); break;
                    case 2: jBRI.setBackground(Color.red); break;
                    case 3: jBRO.setBackground(Color.red); break;
                    case 4: jBIO.setBackground(Color.red); break;
                    case 5: jBII.setBackground(Color.red); break;
                    case 6: jBAI.setBackground(Color.red); break;
                    case 7: jBAO.setBackground(Color.red); break;
                    case 8: jBS0.setBackground(Color.red); break;
                    case 9: jBSU.setBackground(Color.red); break;
                    case 10: jBBI.setBackground(Color.red); break;
                    case 11: jBOI.setBackground(Color.red); break;
                    case 12: jBCE.setBackground(Color.red); break;
                    case 13: jBCO.setBackground(Color.red); break;
                    case 14: jBJ.setBackground(Color.red); break;
                    case 15: jBFI.setBackground(Color.red); break;
                }
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAI;
    private javax.swing.JButton jBAO;
    private javax.swing.JButton jBBI;
    private javax.swing.JButton jBCE;
    private javax.swing.JButton jBCO;
    private javax.swing.JButton jBEjecutarPxP;
    private javax.swing.JButton jBFI;
    private javax.swing.JButton jBHLT;
    private javax.swing.JButton jBII;
    private javax.swing.JButton jBIO;
    private javax.swing.JButton jBIniciar;
    private javax.swing.JButton jBJ;
    private javax.swing.JButton jBMI;
    private javax.swing.JButton jBOI;
    private javax.swing.JButton jBRI;
    private javax.swing.JButton jBRO;
    private javax.swing.JButton jBResetear;
    private javax.swing.JButton jBS0;
    private javax.swing.JButton jBSU;
    private javax.swing.JLabel jLCiclosReloj;
    private javax.swing.JLabel jLIR;
    private javax.swing.JLabel jLJC;
    private javax.swing.JLabel jLJZ;
    private javax.swing.JLabel jLMensajeError;
    private javax.swing.JLabel jLNombreAC;
    private javax.swing.JLabel jLNombreALU;
    private javax.swing.JLabel jLNombreB;
    private javax.swing.JLabel jLNombreCiclos;
    private javax.swing.JLabel jLNombreIR;
    private javax.swing.JLabel jLNombreMAR;
    private javax.swing.JLabel jLNombreOUT;
    private javax.swing.JLabel jLNombrePC;
    private javax.swing.JLabel jLNombreRAM;
    private javax.swing.JLabel jLNombreRTA;
    private javax.swing.JLabel jLNombreUC;
    private javax.swing.JLabel jLRTA;
    private javax.swing.JLabel jLSTA;
    private javax.swing.JLabel jLValorAC;
    private javax.swing.JLabel jLValorALU;
    private javax.swing.JLabel jLValorB;
    private javax.swing.JLabel jLValorContadorPrograma;
    private javax.swing.JLabel jLValorJC;
    private javax.swing.JLabel jLValorJZ;
    private javax.swing.JLabel jLValorMAR;
    private javax.swing.JLabel jLValorOUT;
    private javax.swing.JLabel jLValorRAM;
    private javax.swing.JLabel jLValorSTA;
    private javax.swing.JLabel jLValorUC;
    private javax.swing.JLabel jLVelocidad;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JPanel jPAC;
    private javax.swing.JPanel jPALU;
    private javax.swing.JPanel jPB;
    private javax.swing.JPanel jPIR;
    private javax.swing.JPanel jPMAR;
    private javax.swing.JPanel jPOUT;
    private javax.swing.JPanel jPPC;
    private javax.swing.JPanel jPRAM;
    private javax.swing.JPanel jPRTA;
    private javax.swing.JPanel jPUC;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSlider jSliderVelocidad;
    // End of variables declaration//GEN-END:variables
}
